// Copyright 2019, OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: dynatrace/odin/proto/common/v1/common.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ValueType is the enumeration of possible types that value can have.
type AttributeKeyValue_ValueType int32

const (
	// Primitive types:
	AttributeKeyValue_STRING AttributeKeyValue_ValueType = 0
	AttributeKeyValue_INT    AttributeKeyValue_ValueType = 1
	AttributeKeyValue_DOUBLE AttributeKeyValue_ValueType = 2
	AttributeKeyValue_BOOL   AttributeKeyValue_ValueType = 3
	// Array types: 16 + primitive type (can be used as bitmask).
	AttributeKeyValue_STRING_ARRAY AttributeKeyValue_ValueType = 16
	AttributeKeyValue_INT_ARRAY    AttributeKeyValue_ValueType = 17
	AttributeKeyValue_DOUBLE_ARRAY AttributeKeyValue_ValueType = 18
	AttributeKeyValue_BOOL_ARRAY   AttributeKeyValue_ValueType = 19
	// Special array type used by dynamic languages which cannot determine the
	// element type of empty (or all-null) arrays.
	AttributeKeyValue_VALUELESS_ARRAY AttributeKeyValue_ValueType = 20
)

// Enum value maps for AttributeKeyValue_ValueType.
var (
	AttributeKeyValue_ValueType_name = map[int32]string{
		0:  "STRING",
		1:  "INT",
		2:  "DOUBLE",
		3:  "BOOL",
		16: "STRING_ARRAY",
		17: "INT_ARRAY",
		18: "DOUBLE_ARRAY",
		19: "BOOL_ARRAY",
		20: "VALUELESS_ARRAY",
	}
	AttributeKeyValue_ValueType_value = map[string]int32{
		"STRING":          0,
		"INT":             1,
		"DOUBLE":          2,
		"BOOL":            3,
		"STRING_ARRAY":    16,
		"INT_ARRAY":       17,
		"DOUBLE_ARRAY":    18,
		"BOOL_ARRAY":      19,
		"VALUELESS_ARRAY": 20,
	}
)

func (x AttributeKeyValue_ValueType) Enum() *AttributeKeyValue_ValueType {
	p := new(AttributeKeyValue_ValueType)
	*p = x
	return p
}

func (x AttributeKeyValue_ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttributeKeyValue_ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_dynatrace_odin_proto_common_v1_common_proto_enumTypes[0].Descriptor()
}

func (AttributeKeyValue_ValueType) Type() protoreflect.EnumType {
	return &file_dynatrace_odin_proto_common_v1_common_proto_enumTypes[0]
}

func (x AttributeKeyValue_ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttributeKeyValue_ValueType.Descriptor instead.
func (AttributeKeyValue_ValueType) EnumDescriptor() ([]byte, []int) {
	return file_dynatrace_odin_proto_common_v1_common_proto_rawDescGZIP(), []int{0, 0}
}

// AttributeKeyValue is a key-value pair that is used to store Span attributes, Link
// attributes, etc.
type AttributeKeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key part of the key-value pair.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// type of the value.
	Type AttributeKeyValue_ValueType `protobuf:"varint,2,opt,name=type,proto3,enum=dynatrace.odin.proto.common.v1.AttributeKeyValue_ValueType" json:"type,omitempty"`
	// oneof value { // Cannot use oneof with repeated.
	StringValue  string    `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	IntValue     int64     `protobuf:"varint,4,opt,name=int_value,json=intValue,proto3" json:"int_value,omitempty"`
	DoubleValue  float64   `protobuf:"fixed64,5,opt,name=double_value,json=doubleValue,proto3" json:"double_value,omitempty"`
	BoolValue    bool      `protobuf:"varint,6,opt,name=bool_value,json=boolValue,proto3" json:"bool_value,omitempty"`
	StringValues []string  `protobuf:"bytes,7,rep,name=string_values,json=stringValues,proto3" json:"string_values,omitempty"`
	IntValues    []int64   `protobuf:"varint,8,rep,packed,name=int_values,json=intValues,proto3" json:"int_values,omitempty"`
	DoubleValues []float64 `protobuf:"fixed64,9,rep,packed,name=double_values,json=doubleValues,proto3" json:"double_values,omitempty"`
	BoolValues   []bool    `protobuf:"varint,10,rep,packed,name=bool_values,json=boolValues,proto3" json:"bool_values,omitempty"` // }
}

func (x *AttributeKeyValue) Reset() {
	*x = AttributeKeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dynatrace_odin_proto_common_v1_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeKeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeKeyValue) ProtoMessage() {}

func (x *AttributeKeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_dynatrace_odin_proto_common_v1_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeKeyValue.ProtoReflect.Descriptor instead.
func (*AttributeKeyValue) Descriptor() ([]byte, []int) {
	return file_dynatrace_odin_proto_common_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *AttributeKeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AttributeKeyValue) GetType() AttributeKeyValue_ValueType {
	if x != nil {
		return x.Type
	}
	return AttributeKeyValue_STRING
}

func (x *AttributeKeyValue) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

func (x *AttributeKeyValue) GetIntValue() int64 {
	if x != nil {
		return x.IntValue
	}
	return 0
}

func (x *AttributeKeyValue) GetDoubleValue() float64 {
	if x != nil {
		return x.DoubleValue
	}
	return 0
}

func (x *AttributeKeyValue) GetBoolValue() bool {
	if x != nil {
		return x.BoolValue
	}
	return false
}

func (x *AttributeKeyValue) GetStringValues() []string {
	if x != nil {
		return x.StringValues
	}
	return nil
}

func (x *AttributeKeyValue) GetIntValues() []int64 {
	if x != nil {
		return x.IntValues
	}
	return nil
}

func (x *AttributeKeyValue) GetDoubleValues() []float64 {
	if x != nil {
		return x.DoubleValues
	}
	return nil
}

func (x *AttributeKeyValue) GetBoolValues() []bool {
	if x != nil {
		return x.BoolValues
	}
	return nil
}

// StringKeyValue is a pair of key/value strings. This is the simpler (and faster) version
// of AttributeKeyValue that only supports string values.
type StringKeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StringKeyValue) Reset() {
	*x = StringKeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dynatrace_odin_proto_common_v1_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringKeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringKeyValue) ProtoMessage() {}

func (x *StringKeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_dynatrace_odin_proto_common_v1_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringKeyValue.ProtoReflect.Descriptor instead.
func (*StringKeyValue) Descriptor() ([]byte, []int) {
	return file_dynatrace_odin_proto_common_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *StringKeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StringKeyValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_dynatrace_odin_proto_common_v1_common_proto protoreflect.FileDescriptor

var file_dynatrace_odin_proto_common_v1_common_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x64, 0x79, 0x6e, 0x61, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2f, 0x6f, 0x64, 0x69, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x64,
	0x79, 0x6e, 0x61, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6f, 0x64, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0x93, 0x04,
	0x0a, 0x11, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6f, 0x64, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f,
	0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x53,
	0x54, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x10, 0x12, 0x0d, 0x0a,
	0x09, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x11, 0x12, 0x10, 0x0a, 0x0c,
	0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x12, 0x12, 0x0e,
	0x0a, 0x0a, 0x42, 0x4f, 0x4f, 0x4c, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x13, 0x12, 0x13,
	0x0a, 0x0f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x41, 0x52, 0x52, 0x41,
	0x59, 0x10, 0x14, 0x22, 0x38, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x8a, 0x01,
	0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6f, 0x64, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x55, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x64, 0x79, 0x6e, 0x61, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2d, 0x6f, 0x73, 0x73, 0x2f, 0x6f, 0x70,
	0x65, 0x6e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2d, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x2d, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6f, 0x64, 0x69, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_dynatrace_odin_proto_common_v1_common_proto_rawDescOnce sync.Once
	file_dynatrace_odin_proto_common_v1_common_proto_rawDescData = file_dynatrace_odin_proto_common_v1_common_proto_rawDesc
)

func file_dynatrace_odin_proto_common_v1_common_proto_rawDescGZIP() []byte {
	file_dynatrace_odin_proto_common_v1_common_proto_rawDescOnce.Do(func() {
		file_dynatrace_odin_proto_common_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_dynatrace_odin_proto_common_v1_common_proto_rawDescData)
	})
	return file_dynatrace_odin_proto_common_v1_common_proto_rawDescData
}

var file_dynatrace_odin_proto_common_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dynatrace_odin_proto_common_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_dynatrace_odin_proto_common_v1_common_proto_goTypes = []interface{}{
	(AttributeKeyValue_ValueType)(0), // 0: dynatrace.odin.proto.common.v1.AttributeKeyValue.ValueType
	(*AttributeKeyValue)(nil),        // 1: dynatrace.odin.proto.common.v1.AttributeKeyValue
	(*StringKeyValue)(nil),           // 2: dynatrace.odin.proto.common.v1.StringKeyValue
}
var file_dynatrace_odin_proto_common_v1_common_proto_depIdxs = []int32{
	0, // 0: dynatrace.odin.proto.common.v1.AttributeKeyValue.type:type_name -> dynatrace.odin.proto.common.v1.AttributeKeyValue.ValueType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_dynatrace_odin_proto_common_v1_common_proto_init() }
func file_dynatrace_odin_proto_common_v1_common_proto_init() {
	if File_dynatrace_odin_proto_common_v1_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dynatrace_odin_proto_common_v1_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeKeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dynatrace_odin_proto_common_v1_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringKeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dynatrace_odin_proto_common_v1_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dynatrace_odin_proto_common_v1_common_proto_goTypes,
		DependencyIndexes: file_dynatrace_odin_proto_common_v1_common_proto_depIdxs,
		EnumInfos:         file_dynatrace_odin_proto_common_v1_common_proto_enumTypes,
		MessageInfos:      file_dynatrace_odin_proto_common_v1_common_proto_msgTypes,
	}.Build()
	File_dynatrace_odin_proto_common_v1_common_proto = out.File
	file_dynatrace_odin_proto_common_v1_common_proto_rawDesc = nil
	file_dynatrace_odin_proto_common_v1_common_proto_goTypes = nil
	file_dynatrace_odin_proto_common_v1_common_proto_depIdxs = nil
}
